//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace atomic.rss.wp7.FeedsManager {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/atomic.rss.Web.Models")]
    public partial class Item : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string LinkField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeedsManager.IFeedsManager")]
    public interface IFeedsManager {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/LoadArticles", ReplyAction="http://tempuri.org/IFeedsManager/LoadArticlesResponse")]
        System.IAsyncResult BeginLoadArticles(System.AsyncCallback callback, object asyncState);
        
        void EndLoadArticles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/AddChannels", ReplyAction="http://tempuri.org/IFeedsManager/AddChannelsResponse")]
        System.IAsyncResult BeginAddChannels(string user, string channels, System.AsyncCallback callback, object asyncState);
        
        void EndAddChannels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/RemoveChannelsFromUser", ReplyAction="http://tempuri.org/IFeedsManager/RemoveChannelsFromUserResponse")]
        System.IAsyncResult BeginRemoveChannelsFromUser(string user, int id_channels, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveChannelsFromUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/SetArticlesReadForUser", ReplyAction="http://tempuri.org/IFeedsManager/SetArticlesReadForUserResponse")]
        System.IAsyncResult BeginSetArticlesReadForUser(int id_article, string user, System.AsyncCallback callback, object asyncState);
        
        void EndSetArticlesReadForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/SetAllArticlesReadForUser", ReplyAction="http://tempuri.org/IFeedsManager/SetAllArticlesReadForUserResponse")]
        System.IAsyncResult BeginSetAllArticlesReadForUser(string user, System.AsyncCallback callback, object asyncState);
        
        void EndSetAllArticlesReadForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/GetUserChannels", ReplyAction="http://tempuri.org/IFeedsManager/GetUserChannelsResponse")]
        System.IAsyncResult BeginGetUserChannels(string user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetUserChannels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/GetChannelsWithoutUser", ReplyAction="http://tempuri.org/IFeedsManager/GetChannelsWithoutUserResponse")]
        System.IAsyncResult BeginGetChannelsWithoutUser(string user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetChannelsWithoutUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/GetArticlesUnread", ReplyAction="http://tempuri.org/IFeedsManager/GetArticlesUnreadResponse")]
        System.IAsyncResult BeginGetArticlesUnread(string user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetArticlesUnread(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/GetArticlesReaded", ReplyAction="http://tempuri.org/IFeedsManager/GetArticlesReadedResponse")]
        System.IAsyncResult BeginGetArticlesReaded(string user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetArticlesReaded(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/DestroyChannelsRelation", ReplyAction="http://tempuri.org/IFeedsManager/DestroyChannelsRelationResponse")]
        System.IAsyncResult BeginDestroyChannelsRelation(int id_channels, System.AsyncCallback callback, object asyncState);
        
        void EndDestroyChannelsRelation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFeedsManager/DestroyArticlesRelation", ReplyAction="http://tempuri.org/IFeedsManager/DestroyArticlesRelationResponse")]
        System.IAsyncResult BeginDestroyArticlesRelation(int id_channels, System.AsyncCallback callback, object asyncState);
        
        void EndDestroyArticlesRelation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeedsManagerChannel : atomic.rss.wp7.FeedsManager.IFeedsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChannelsWithoutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChannelsWithoutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArticlesUnreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArticlesUnreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArticlesReadedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArticlesReadedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedsManagerClient : System.ServiceModel.ClientBase<atomic.rss.wp7.FeedsManager.IFeedsManager>, atomic.rss.wp7.FeedsManager.IFeedsManager {
        
        private BeginOperationDelegate onBeginLoadArticlesDelegate;
        
        private EndOperationDelegate onEndLoadArticlesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadArticlesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddChannelsDelegate;
        
        private EndOperationDelegate onEndAddChannelsDelegate;
        
        private System.Threading.SendOrPostCallback onAddChannelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveChannelsFromUserDelegate;
        
        private EndOperationDelegate onEndRemoveChannelsFromUserDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveChannelsFromUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetArticlesReadForUserDelegate;
        
        private EndOperationDelegate onEndSetArticlesReadForUserDelegate;
        
        private System.Threading.SendOrPostCallback onSetArticlesReadForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAllArticlesReadForUserDelegate;
        
        private EndOperationDelegate onEndSetAllArticlesReadForUserDelegate;
        
        private System.Threading.SendOrPostCallback onSetAllArticlesReadForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserChannelsDelegate;
        
        private EndOperationDelegate onEndGetUserChannelsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserChannelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChannelsWithoutUserDelegate;
        
        private EndOperationDelegate onEndGetChannelsWithoutUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetChannelsWithoutUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetArticlesUnreadDelegate;
        
        private EndOperationDelegate onEndGetArticlesUnreadDelegate;
        
        private System.Threading.SendOrPostCallback onGetArticlesUnreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetArticlesReadedDelegate;
        
        private EndOperationDelegate onEndGetArticlesReadedDelegate;
        
        private System.Threading.SendOrPostCallback onGetArticlesReadedCompletedDelegate;
        
        private BeginOperationDelegate onBeginDestroyChannelsRelationDelegate;
        
        private EndOperationDelegate onEndDestroyChannelsRelationDelegate;
        
        private System.Threading.SendOrPostCallback onDestroyChannelsRelationCompletedDelegate;
        
        private BeginOperationDelegate onBeginDestroyArticlesRelationDelegate;
        
        private EndOperationDelegate onEndDestroyArticlesRelationDelegate;
        
        private System.Threading.SendOrPostCallback onDestroyArticlesRelationCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FeedsManagerClient() {
        }
        
        public FeedsManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedsManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedsManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedsManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadArticlesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddChannelsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveChannelsFromUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetArticlesReadForUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetAllArticlesReadForUserCompleted;
        
        public event System.EventHandler<GetUserChannelsCompletedEventArgs> GetUserChannelsCompleted;
        
        public event System.EventHandler<GetChannelsWithoutUserCompletedEventArgs> GetChannelsWithoutUserCompleted;
        
        public event System.EventHandler<GetArticlesUnreadCompletedEventArgs> GetArticlesUnreadCompleted;
        
        public event System.EventHandler<GetArticlesReadedCompletedEventArgs> GetArticlesReadedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DestroyChannelsRelationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DestroyArticlesRelationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginLoadArticles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadArticles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void atomic.rss.wp7.FeedsManager.IFeedsManager.EndLoadArticles(System.IAsyncResult result) {
            base.Channel.EndLoadArticles(result);
        }
        
        private System.IAsyncResult OnBeginLoadArticles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginLoadArticles(callback, asyncState);
        }
        
        private object[] OnEndLoadArticles(System.IAsyncResult result) {
            ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndLoadArticles(result);
            return null;
        }
        
        private void OnLoadArticlesCompleted(object state) {
            if ((this.LoadArticlesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadArticlesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadArticlesAsync() {
            this.LoadArticlesAsync(null);
        }
        
        public void LoadArticlesAsync(object userState) {
            if ((this.onBeginLoadArticlesDelegate == null)) {
                this.onBeginLoadArticlesDelegate = new BeginOperationDelegate(this.OnBeginLoadArticles);
            }
            if ((this.onEndLoadArticlesDelegate == null)) {
                this.onEndLoadArticlesDelegate = new EndOperationDelegate(this.OnEndLoadArticles);
            }
            if ((this.onLoadArticlesCompletedDelegate == null)) {
                this.onLoadArticlesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadArticlesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadArticlesDelegate, null, this.onEndLoadArticlesDelegate, this.onLoadArticlesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginAddChannels(string user, string channels, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddChannels(user, channels, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void atomic.rss.wp7.FeedsManager.IFeedsManager.EndAddChannels(System.IAsyncResult result) {
            base.Channel.EndAddChannels(result);
        }
        
        private System.IAsyncResult OnBeginAddChannels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            string channels = ((string)(inValues[1]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginAddChannels(user, channels, callback, asyncState);
        }
        
        private object[] OnEndAddChannels(System.IAsyncResult result) {
            ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndAddChannels(result);
            return null;
        }
        
        private void OnAddChannelsCompleted(object state) {
            if ((this.AddChannelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddChannelsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddChannelsAsync(string user, string channels) {
            this.AddChannelsAsync(user, channels, null);
        }
        
        public void AddChannelsAsync(string user, string channels, object userState) {
            if ((this.onBeginAddChannelsDelegate == null)) {
                this.onBeginAddChannelsDelegate = new BeginOperationDelegate(this.OnBeginAddChannels);
            }
            if ((this.onEndAddChannelsDelegate == null)) {
                this.onEndAddChannelsDelegate = new EndOperationDelegate(this.OnEndAddChannels);
            }
            if ((this.onAddChannelsCompletedDelegate == null)) {
                this.onAddChannelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddChannelsCompleted);
            }
            base.InvokeAsync(this.onBeginAddChannelsDelegate, new object[] {
                        user,
                        channels}, this.onEndAddChannelsDelegate, this.onAddChannelsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginRemoveChannelsFromUser(string user, int id_channels, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveChannelsFromUser(user, id_channels, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void atomic.rss.wp7.FeedsManager.IFeedsManager.EndRemoveChannelsFromUser(System.IAsyncResult result) {
            base.Channel.EndRemoveChannelsFromUser(result);
        }
        
        private System.IAsyncResult OnBeginRemoveChannelsFromUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            int id_channels = ((int)(inValues[1]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginRemoveChannelsFromUser(user, id_channels, callback, asyncState);
        }
        
        private object[] OnEndRemoveChannelsFromUser(System.IAsyncResult result) {
            ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndRemoveChannelsFromUser(result);
            return null;
        }
        
        private void OnRemoveChannelsFromUserCompleted(object state) {
            if ((this.RemoveChannelsFromUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveChannelsFromUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveChannelsFromUserAsync(string user, int id_channels) {
            this.RemoveChannelsFromUserAsync(user, id_channels, null);
        }
        
        public void RemoveChannelsFromUserAsync(string user, int id_channels, object userState) {
            if ((this.onBeginRemoveChannelsFromUserDelegate == null)) {
                this.onBeginRemoveChannelsFromUserDelegate = new BeginOperationDelegate(this.OnBeginRemoveChannelsFromUser);
            }
            if ((this.onEndRemoveChannelsFromUserDelegate == null)) {
                this.onEndRemoveChannelsFromUserDelegate = new EndOperationDelegate(this.OnEndRemoveChannelsFromUser);
            }
            if ((this.onRemoveChannelsFromUserCompletedDelegate == null)) {
                this.onRemoveChannelsFromUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveChannelsFromUserCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveChannelsFromUserDelegate, new object[] {
                        user,
                        id_channels}, this.onEndRemoveChannelsFromUserDelegate, this.onRemoveChannelsFromUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginSetArticlesReadForUser(int id_article, string user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetArticlesReadForUser(id_article, user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void atomic.rss.wp7.FeedsManager.IFeedsManager.EndSetArticlesReadForUser(System.IAsyncResult result) {
            base.Channel.EndSetArticlesReadForUser(result);
        }
        
        private System.IAsyncResult OnBeginSetArticlesReadForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_article = ((int)(inValues[0]));
            string user = ((string)(inValues[1]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginSetArticlesReadForUser(id_article, user, callback, asyncState);
        }
        
        private object[] OnEndSetArticlesReadForUser(System.IAsyncResult result) {
            ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndSetArticlesReadForUser(result);
            return null;
        }
        
        private void OnSetArticlesReadForUserCompleted(object state) {
            if ((this.SetArticlesReadForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetArticlesReadForUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetArticlesReadForUserAsync(int id_article, string user) {
            this.SetArticlesReadForUserAsync(id_article, user, null);
        }
        
        public void SetArticlesReadForUserAsync(int id_article, string user, object userState) {
            if ((this.onBeginSetArticlesReadForUserDelegate == null)) {
                this.onBeginSetArticlesReadForUserDelegate = new BeginOperationDelegate(this.OnBeginSetArticlesReadForUser);
            }
            if ((this.onEndSetArticlesReadForUserDelegate == null)) {
                this.onEndSetArticlesReadForUserDelegate = new EndOperationDelegate(this.OnEndSetArticlesReadForUser);
            }
            if ((this.onSetArticlesReadForUserCompletedDelegate == null)) {
                this.onSetArticlesReadForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetArticlesReadForUserCompleted);
            }
            base.InvokeAsync(this.onBeginSetArticlesReadForUserDelegate, new object[] {
                        id_article,
                        user}, this.onEndSetArticlesReadForUserDelegate, this.onSetArticlesReadForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginSetAllArticlesReadForUser(string user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAllArticlesReadForUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void atomic.rss.wp7.FeedsManager.IFeedsManager.EndSetAllArticlesReadForUser(System.IAsyncResult result) {
            base.Channel.EndSetAllArticlesReadForUser(result);
        }
        
        private System.IAsyncResult OnBeginSetAllArticlesReadForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginSetAllArticlesReadForUser(user, callback, asyncState);
        }
        
        private object[] OnEndSetAllArticlesReadForUser(System.IAsyncResult result) {
            ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndSetAllArticlesReadForUser(result);
            return null;
        }
        
        private void OnSetAllArticlesReadForUserCompleted(object state) {
            if ((this.SetAllArticlesReadForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAllArticlesReadForUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAllArticlesReadForUserAsync(string user) {
            this.SetAllArticlesReadForUserAsync(user, null);
        }
        
        public void SetAllArticlesReadForUserAsync(string user, object userState) {
            if ((this.onBeginSetAllArticlesReadForUserDelegate == null)) {
                this.onBeginSetAllArticlesReadForUserDelegate = new BeginOperationDelegate(this.OnBeginSetAllArticlesReadForUser);
            }
            if ((this.onEndSetAllArticlesReadForUserDelegate == null)) {
                this.onEndSetAllArticlesReadForUserDelegate = new EndOperationDelegate(this.OnEndSetAllArticlesReadForUser);
            }
            if ((this.onSetAllArticlesReadForUserCompletedDelegate == null)) {
                this.onSetAllArticlesReadForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAllArticlesReadForUserCompleted);
            }
            base.InvokeAsync(this.onBeginSetAllArticlesReadForUserDelegate, new object[] {
                        user}, this.onEndSetAllArticlesReadForUserDelegate, this.onSetAllArticlesReadForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginGetUserChannels(string user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserChannels(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> atomic.rss.wp7.FeedsManager.IFeedsManager.EndGetUserChannels(System.IAsyncResult result) {
            return base.Channel.EndGetUserChannels(result);
        }
        
        private System.IAsyncResult OnBeginGetUserChannels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginGetUserChannels(user, callback, asyncState);
        }
        
        private object[] OnEndGetUserChannels(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> retVal = ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndGetUserChannels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserChannelsCompleted(object state) {
            if ((this.GetUserChannelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserChannelsCompleted(this, new GetUserChannelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserChannelsAsync(string user) {
            this.GetUserChannelsAsync(user, null);
        }
        
        public void GetUserChannelsAsync(string user, object userState) {
            if ((this.onBeginGetUserChannelsDelegate == null)) {
                this.onBeginGetUserChannelsDelegate = new BeginOperationDelegate(this.OnBeginGetUserChannels);
            }
            if ((this.onEndGetUserChannelsDelegate == null)) {
                this.onEndGetUserChannelsDelegate = new EndOperationDelegate(this.OnEndGetUserChannels);
            }
            if ((this.onGetUserChannelsCompletedDelegate == null)) {
                this.onGetUserChannelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserChannelsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserChannelsDelegate, new object[] {
                        user}, this.onEndGetUserChannelsDelegate, this.onGetUserChannelsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginGetChannelsWithoutUser(string user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChannelsWithoutUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> atomic.rss.wp7.FeedsManager.IFeedsManager.EndGetChannelsWithoutUser(System.IAsyncResult result) {
            return base.Channel.EndGetChannelsWithoutUser(result);
        }
        
        private System.IAsyncResult OnBeginGetChannelsWithoutUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginGetChannelsWithoutUser(user, callback, asyncState);
        }
        
        private object[] OnEndGetChannelsWithoutUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> retVal = ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndGetChannelsWithoutUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChannelsWithoutUserCompleted(object state) {
            if ((this.GetChannelsWithoutUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChannelsWithoutUserCompleted(this, new GetChannelsWithoutUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChannelsWithoutUserAsync(string user) {
            this.GetChannelsWithoutUserAsync(user, null);
        }
        
        public void GetChannelsWithoutUserAsync(string user, object userState) {
            if ((this.onBeginGetChannelsWithoutUserDelegate == null)) {
                this.onBeginGetChannelsWithoutUserDelegate = new BeginOperationDelegate(this.OnBeginGetChannelsWithoutUser);
            }
            if ((this.onEndGetChannelsWithoutUserDelegate == null)) {
                this.onEndGetChannelsWithoutUserDelegate = new EndOperationDelegate(this.OnEndGetChannelsWithoutUser);
            }
            if ((this.onGetChannelsWithoutUserCompletedDelegate == null)) {
                this.onGetChannelsWithoutUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChannelsWithoutUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetChannelsWithoutUserDelegate, new object[] {
                        user}, this.onEndGetChannelsWithoutUserDelegate, this.onGetChannelsWithoutUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginGetArticlesUnread(string user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArticlesUnread(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> atomic.rss.wp7.FeedsManager.IFeedsManager.EndGetArticlesUnread(System.IAsyncResult result) {
            return base.Channel.EndGetArticlesUnread(result);
        }
        
        private System.IAsyncResult OnBeginGetArticlesUnread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginGetArticlesUnread(user, callback, asyncState);
        }
        
        private object[] OnEndGetArticlesUnread(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> retVal = ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndGetArticlesUnread(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArticlesUnreadCompleted(object state) {
            if ((this.GetArticlesUnreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArticlesUnreadCompleted(this, new GetArticlesUnreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArticlesUnreadAsync(string user) {
            this.GetArticlesUnreadAsync(user, null);
        }
        
        public void GetArticlesUnreadAsync(string user, object userState) {
            if ((this.onBeginGetArticlesUnreadDelegate == null)) {
                this.onBeginGetArticlesUnreadDelegate = new BeginOperationDelegate(this.OnBeginGetArticlesUnread);
            }
            if ((this.onEndGetArticlesUnreadDelegate == null)) {
                this.onEndGetArticlesUnreadDelegate = new EndOperationDelegate(this.OnEndGetArticlesUnread);
            }
            if ((this.onGetArticlesUnreadCompletedDelegate == null)) {
                this.onGetArticlesUnreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArticlesUnreadCompleted);
            }
            base.InvokeAsync(this.onBeginGetArticlesUnreadDelegate, new object[] {
                        user}, this.onEndGetArticlesUnreadDelegate, this.onGetArticlesUnreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginGetArticlesReaded(string user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArticlesReaded(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> atomic.rss.wp7.FeedsManager.IFeedsManager.EndGetArticlesReaded(System.IAsyncResult result) {
            return base.Channel.EndGetArticlesReaded(result);
        }
        
        private System.IAsyncResult OnBeginGetArticlesReaded(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string user = ((string)(inValues[0]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginGetArticlesReaded(user, callback, asyncState);
        }
        
        private object[] OnEndGetArticlesReaded(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> retVal = ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndGetArticlesReaded(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArticlesReadedCompleted(object state) {
            if ((this.GetArticlesReadedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArticlesReadedCompleted(this, new GetArticlesReadedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArticlesReadedAsync(string user) {
            this.GetArticlesReadedAsync(user, null);
        }
        
        public void GetArticlesReadedAsync(string user, object userState) {
            if ((this.onBeginGetArticlesReadedDelegate == null)) {
                this.onBeginGetArticlesReadedDelegate = new BeginOperationDelegate(this.OnBeginGetArticlesReaded);
            }
            if ((this.onEndGetArticlesReadedDelegate == null)) {
                this.onEndGetArticlesReadedDelegate = new EndOperationDelegate(this.OnEndGetArticlesReaded);
            }
            if ((this.onGetArticlesReadedCompletedDelegate == null)) {
                this.onGetArticlesReadedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArticlesReadedCompleted);
            }
            base.InvokeAsync(this.onBeginGetArticlesReadedDelegate, new object[] {
                        user}, this.onEndGetArticlesReadedDelegate, this.onGetArticlesReadedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginDestroyChannelsRelation(int id_channels, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDestroyChannelsRelation(id_channels, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void atomic.rss.wp7.FeedsManager.IFeedsManager.EndDestroyChannelsRelation(System.IAsyncResult result) {
            base.Channel.EndDestroyChannelsRelation(result);
        }
        
        private System.IAsyncResult OnBeginDestroyChannelsRelation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_channels = ((int)(inValues[0]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginDestroyChannelsRelation(id_channels, callback, asyncState);
        }
        
        private object[] OnEndDestroyChannelsRelation(System.IAsyncResult result) {
            ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndDestroyChannelsRelation(result);
            return null;
        }
        
        private void OnDestroyChannelsRelationCompleted(object state) {
            if ((this.DestroyChannelsRelationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DestroyChannelsRelationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DestroyChannelsRelationAsync(int id_channels) {
            this.DestroyChannelsRelationAsync(id_channels, null);
        }
        
        public void DestroyChannelsRelationAsync(int id_channels, object userState) {
            if ((this.onBeginDestroyChannelsRelationDelegate == null)) {
                this.onBeginDestroyChannelsRelationDelegate = new BeginOperationDelegate(this.OnBeginDestroyChannelsRelation);
            }
            if ((this.onEndDestroyChannelsRelationDelegate == null)) {
                this.onEndDestroyChannelsRelationDelegate = new EndOperationDelegate(this.OnEndDestroyChannelsRelation);
            }
            if ((this.onDestroyChannelsRelationCompletedDelegate == null)) {
                this.onDestroyChannelsRelationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDestroyChannelsRelationCompleted);
            }
            base.InvokeAsync(this.onBeginDestroyChannelsRelationDelegate, new object[] {
                        id_channels}, this.onEndDestroyChannelsRelationDelegate, this.onDestroyChannelsRelationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult atomic.rss.wp7.FeedsManager.IFeedsManager.BeginDestroyArticlesRelation(int id_channels, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDestroyArticlesRelation(id_channels, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void atomic.rss.wp7.FeedsManager.IFeedsManager.EndDestroyArticlesRelation(System.IAsyncResult result) {
            base.Channel.EndDestroyArticlesRelation(result);
        }
        
        private System.IAsyncResult OnBeginDestroyArticlesRelation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_channels = ((int)(inValues[0]));
            return ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).BeginDestroyArticlesRelation(id_channels, callback, asyncState);
        }
        
        private object[] OnEndDestroyArticlesRelation(System.IAsyncResult result) {
            ((atomic.rss.wp7.FeedsManager.IFeedsManager)(this)).EndDestroyArticlesRelation(result);
            return null;
        }
        
        private void OnDestroyArticlesRelationCompleted(object state) {
            if ((this.DestroyArticlesRelationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DestroyArticlesRelationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DestroyArticlesRelationAsync(int id_channels) {
            this.DestroyArticlesRelationAsync(id_channels, null);
        }
        
        public void DestroyArticlesRelationAsync(int id_channels, object userState) {
            if ((this.onBeginDestroyArticlesRelationDelegate == null)) {
                this.onBeginDestroyArticlesRelationDelegate = new BeginOperationDelegate(this.OnBeginDestroyArticlesRelation);
            }
            if ((this.onEndDestroyArticlesRelationDelegate == null)) {
                this.onEndDestroyArticlesRelationDelegate = new EndOperationDelegate(this.OnEndDestroyArticlesRelation);
            }
            if ((this.onDestroyArticlesRelationCompletedDelegate == null)) {
                this.onDestroyArticlesRelationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDestroyArticlesRelationCompleted);
            }
            base.InvokeAsync(this.onBeginDestroyArticlesRelationDelegate, new object[] {
                        id_channels}, this.onEndDestroyArticlesRelationDelegate, this.onDestroyArticlesRelationCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override atomic.rss.wp7.FeedsManager.IFeedsManager CreateChannel() {
            return new FeedsManagerClientChannel(this);
        }
        
        private class FeedsManagerClientChannel : ChannelBase<atomic.rss.wp7.FeedsManager.IFeedsManager>, atomic.rss.wp7.FeedsManager.IFeedsManager {
            
            public FeedsManagerClientChannel(System.ServiceModel.ClientBase<atomic.rss.wp7.FeedsManager.IFeedsManager> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLoadArticles(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("LoadArticles", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLoadArticles(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("LoadArticles", _args, result);
            }
            
            public System.IAsyncResult BeginAddChannels(string user, string channels, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = user;
                _args[1] = channels;
                System.IAsyncResult _result = base.BeginInvoke("AddChannels", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddChannels(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddChannels", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveChannelsFromUser(string user, int id_channels, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = user;
                _args[1] = id_channels;
                System.IAsyncResult _result = base.BeginInvoke("RemoveChannelsFromUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveChannelsFromUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveChannelsFromUser", _args, result);
            }
            
            public System.IAsyncResult BeginSetArticlesReadForUser(int id_article, string user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id_article;
                _args[1] = user;
                System.IAsyncResult _result = base.BeginInvoke("SetArticlesReadForUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetArticlesReadForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetArticlesReadForUser", _args, result);
            }
            
            public System.IAsyncResult BeginSetAllArticlesReadForUser(string user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SetAllArticlesReadForUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetAllArticlesReadForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetAllArticlesReadForUser", _args, result);
            }
            
            public System.IAsyncResult BeginGetUserChannels(string user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("GetUserChannels", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetUserChannels(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> _result = ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(base.EndInvoke("GetUserChannels", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChannelsWithoutUser(string user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("GetChannelsWithoutUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetChannelsWithoutUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> _result = ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(base.EndInvoke("GetChannelsWithoutUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetArticlesUnread(string user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("GetArticlesUnread", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetArticlesUnread(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> _result = ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(base.EndInvoke("GetArticlesUnread", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetArticlesReaded(string user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("GetArticlesReaded", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> EndGetArticlesReaded(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item> _result = ((System.Collections.ObjectModel.ObservableCollection<atomic.rss.wp7.FeedsManager.Item>)(base.EndInvoke("GetArticlesReaded", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDestroyChannelsRelation(int id_channels, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id_channels;
                System.IAsyncResult _result = base.BeginInvoke("DestroyChannelsRelation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDestroyChannelsRelation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DestroyChannelsRelation", _args, result);
            }
            
            public System.IAsyncResult BeginDestroyArticlesRelation(int id_channels, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id_channels;
                System.IAsyncResult _result = base.BeginInvoke("DestroyArticlesRelation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDestroyArticlesRelation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DestroyArticlesRelation", _args, result);
            }
        }
    }
}
